version: '3.8'

networks:
  myNetwork:
    driver: bridge

services:
  mysql:
    image: mysql:latest
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: cash
      MYSQL_USER: corey
      MYSQL_PASSWORD: 123456
    ports:
      - "3306:3306"
    networks:
      - myNetwork

  redis:
    image: redis:latest
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - myNetwork

  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper:/data
      - ./data/zookeeper_log:/datalog
    networks:
      - myNetwork

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092 # 内部集群通信地址
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  # 注册到zookeeper的地址
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_LOG_RETENTION_HOURS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/kafka:/var/lib/kafka/data
    networks:
      - myNetwork

  kafka-manager:
    image: hlebalbau/kafka-manager:latest
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: 123456
    depends_on:
      - zookeeper
      - kafka
    networks:
      - myNetwork

  etcd:
    image: bitnami/etcd:latest
    volumes:
      - ./data/etcd:/etcd-data
    ports:
      - "2379:2379"
      - "2380:2380"
    environment:
        ALLOW_NONE_AUTHENTICATION: "yes"
        ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
        ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    networks:
      - myNetwork

  etcd-manager:
    image: evildecay/etcdkeeper:latest
    ports:
      - "8080:8080"
    environment:
      ETCD_SERVER: "http://etcd:2379"
    depends_on:
      - etcd
    networks:
      - myNetwork
